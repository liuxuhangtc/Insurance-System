/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Business.InsuranceSystem;
import Business.DB4OUtil.DB4OUtil;
import Business.Plan.Plan;
import Business.UserAccount.GovernmentUser;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.awt.Font;

/**
 *
 * @author euewhnz
 */
public class GovEidtMessageView extends javax.swing.JFrame {

	private InsuranceSystem system;
	private JButton update;
	/**
	 * Creates new form CompanyManagerJPanel
	 */
	public GovEidtMessageView(GovernmentUser user,InsuranceSystem system) {
		JPanel jPanel = new JPanel();
		getContentPane().add(jPanel);
		this.system = system;
		initComponents(jPanel);
		initTable(user);
		setResizable(false);
		setBounds(470, 200, 800, 500);
		setVisible(true);
	}

	private void initTable(GovernmentUser user){
		DefaultTableModel model = (DefaultTableModel) planListTable.getModel();

		model.setRowCount(0);

		Object[] row = new Object[6];
		row[0] = user.getUsername();
		row[1] = user.getPassword();
		row[2] = user.getBranchLocation();
		row[3] = user.getBranchName();
		model.addRow(row);
	}


	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents(JPanel jPanel) {

		jScrollPane1 = new javax.swing.JScrollPane();
		planListTable = new javax.swing.JTable();
		planListTable.setFont(new Font("Arial", Font.BOLD, 14));
		update = new JButton("update");
		update.setFont(new Font("Arial", Font.BOLD, 14));

		planListTable.setModel(new javax.swing.table.DefaultTableModel(
				new Object [][] {
					{null, null, null, null}
				},
				new String [] {
						"Username", "Password", "Branch Location", "Branch Name"
				}
				) {
			Class[] types = new Class [] {
					java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
			};
			boolean[] canEdit = new boolean [] {
					false, true, true, true
			};

			public Class getColumnClass(int columnIndex) {
				return types [columnIndex];
			}

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit [columnIndex];
			}
		});


		planListTable.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				planListTableMouseClicked(evt);
			}
		});
		jScrollPane1.setViewportView(planListTable);
		if (planListTable.getColumnModel().getColumnCount() > 0) {
			planListTable.getColumnModel().getColumn(0).setResizable(false);
		}
		
		update.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				DefaultTableModel userModel = (DefaultTableModel) planListTable.getModel();

				String username = String.valueOf(userModel.getValueAt(0, 0));
				String password = String.valueOf(userModel.getValueAt(0, 1));
				String branchLocation = String.valueOf(userModel.getValueAt(0, 2));
				String branchName = String.valueOf(userModel.getValueAt(0, 3));
				GovernmentUser cu = (GovernmentUser)system.getUserAccountDirectory().findUserByUsername(system.getCurrentUser().getUsername());
				cu.setPassword(password);
				cu.setBranchLocation(branchLocation);
				cu.setBranchName(branchName);
				system.getUserAccountDirectory().update(cu);
				system.setCurrentUser(cu);
				DB4OUtil.getInstance().storeSystem(system);
				JOptionPane.showMessageDialog(null, "Update successfully!");
			}
		});


		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(jPanel);
		jPanel.setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup()
										.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
										.addGap(25, 25, 25))
								.addComponent(update)))
				);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGap(28, 28, 28)
						.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(42, 42, 42)
						.addComponent(update)
						.addContainerGap(188, Short.MAX_VALUE))
				);
	}// </editor-fold>//GEN-END:initComponents

	private void approveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveButtonActionPerformed
		// TODO add your handling code here:

		int planIndex = planListTable.getSelectedRow();
		if(planIndex >= 0) {
			String id = planListTable.getValueAt(planListTable.getSelectedRow(), 1).toString();
			Plan plan = system.getPlanDirectory().findPlanById(Integer.valueOf(id));
			plan.setStatus("approve");
			JOptionPane.showMessageDialog(null, "Plan approved!");
			DefaultTableModel model = (DefaultTableModel)planListTable.getModel();
			model.removeRow(planIndex);
		}
	}//GEN-LAST:event_approveButtonActionPerformed

	private void planListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_planListTableMouseClicked
		// TODO add your handling code here:
	}//GEN-LAST:event_planListTableMouseClicked

	private void rejectjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectjButtonActionPerformed
		// TODO add your handling code here:
		int planIndex = planListTable.getSelectedRow();
		String id = planListTable.getValueAt(planListTable.getSelectedRow(), 1).toString();
		Plan plan = system.getPlanDirectory().findPlanById(Integer.valueOf(id));
		plan.setStatus("reject");
		JOptionPane.showMessageDialog(null, "Plan reject!");
		DefaultTableModel model = (DefaultTableModel) planListTable.getModel();
		model.removeRow(planIndex);
	}//GEN-LAST:event_rejectjButtonActionPerformed

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_jButton1ActionPerformed


	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable planListTable;
}
