/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Business.InsuranceSystem;
import Business.Plan.Plan;
import CustomerApply.folder.CustomerPlan;
import userinterface.Customer.CustomerMainJPanel.CallBack;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.awt.Font;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;

/**
 *
 * @author xuhang
 */
public class SelfPlanListView extends javax.swing.JFrame {

	private InsuranceSystem system;
	private JButton mark;
	private List<Plan> showPlans = new ArrayList<>();
	/**
	 * Creates new form CompanyManagerJPanel
	 */
	public SelfPlanListView(InsuranceSystem system) {
		JPanel jPanel = new JPanel();
		getContentPane().add(jPanel);
		this.system = system;
		initComponents(jPanel);
		initTable();
		setResizable(false);
		setBounds(470, 200, 851, 519);
		setVisible(true);
	}

	private void initTable(){
		DefaultTableModel model = (DefaultTableModel) planListTable.getModel();

		model.setRowCount(0);

		List<CustomerPlan> customerPlans=system.getCustomerPlanDirectory().getCustomerPlans();

		for (int i=0;i<customerPlans.size();i++) {
			CustomerPlan customerPlan = customerPlans.get(i);
			if(customerPlan.getCustomer().getUsername().equals(system.getCurrentUser().getUsername())) {
				Plan plan = customerPlan.getPlan();
				showPlans.add(plan);
				Object[] row = new Object[7];
				row[0] = plan.getTitle();
				row[1] = plan.getPlanId();
				row[2] = plan.getPrice();
				row[3] = plan.getOfferField();
				row[4] = plan.getOfferAgeRange();
				row[5] = plan.getCovertimerange();
				row[6] = plan.getMark();
				model.addRow(row);
			}
		}

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents(JPanel jPanel) {
		
		ImageIcon markIcon = new ImageIcon("./img/star.png");

		jScrollPane1 = new javax.swing.JScrollPane();
		planListTable = new javax.swing.JTable();
		planListTable.setFont(new Font("Arial", Font.BOLD, 14));
		mark = new JButton(markIcon);
		mark.setText("Mark Rating");
		mark.setFont(new Font("Arial", Font.BOLD, 15));

		planListTable.setModel(new javax.swing.table.DefaultTableModel(
				new Object [][] {
					{null, null, null, null, null, null,null},
					{null, null, null, null, null, null,null},
					{null, null, null, null, null, null,null},
					{null, null, null, null, null, null,null}
				},
				new String [] {
						"Title", "Plan id", "Price", "Offer Field", "Offer Age Range", "Cover Time Range","Rating"
				}
				) {
			boolean[] canEdit = new boolean [] {
					false, false, false, false, false, false
			};

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit [columnIndex];
			}
		});


		planListTable.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				planListTableMouseClicked(evt);
			}
		});
		jScrollPane1.setViewportView(planListTable);
		if (planListTable.getColumnModel().getColumnCount() > 0) {
			planListTable.getColumnModel().getColumn(0).setResizable(false);
		}
		
		mark.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				try{
				int planIndex = planListTable.getSelectedRow();
				if(planIndex >= 0) {
					new MarkView(showPlans.get(planIndex),new CallBack() {
						
						@Override
						public void markFinish() {
							List<CustomerPlan> customerPlans =system.getCustomerPlanDirectory().getCustomerPlans();
							for(CustomerPlan customerPlan:customerPlans) {
								if(customerPlan.getPlan().getPlanId()==showPlans.get(planIndex).getPlanId()) {
									customerPlan.getPlan().setMark(showPlans.get(planIndex).getMark());
								}
							}
							initTable();
						}
					});
				}
				}
				catch (Exception error) {
			         /* This is a generic Exception handler which means it can handle
			          * all the exceptions. This will execute if the exception is not
			          * handled by previous catch blocks.
			          */
					JOptionPane.showMessageDialog(null, "Please select a row");
			    }
			}
		});



		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(jPanel);
		layout.setHorizontalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addContainerGap()
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addComponent(mark, GroupLayout.PREFERRED_SIZE, 134, GroupLayout.PREFERRED_SIZE)
						.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 817, Short.MAX_VALUE))
					.addContainerGap())
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addGap(28)
					.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
					.addGap(28)
					.addComponent(mark, 50, 50, 50)
					.addGap(212))
		);
		jPanel.setLayout(layout);
	}// </editor-fold>//GEN-END:initComponents

	private void approveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveButtonActionPerformed
		// TODO add your handling code here:

		int planIndex = planListTable.getSelectedRow();
		if(planIndex >= 0) {
			String id = planListTable.getValueAt(planListTable.getSelectedRow(), 1).toString();
			Plan plan = system.getPlanDirectory().findPlanById(Integer.valueOf(id));
			plan.setStatus("approve");
			JOptionPane.showMessageDialog(null, "Plan approved!");
			DefaultTableModel model = (DefaultTableModel)planListTable.getModel();
			model.removeRow(planIndex);
		}
	}//GEN-LAST:event_approveButtonActionPerformed

	private void planListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_planListTableMouseClicked
		// TODO add your handling code here:
	}//GEN-LAST:event_planListTableMouseClicked

	private void rejectjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectjButtonActionPerformed
		// TODO add your handling code here:
		int planIndex = planListTable.getSelectedRow();
		String id = planListTable.getValueAt(planListTable.getSelectedRow(), 1).toString();
		Plan plan = system.getPlanDirectory().findPlanById(Integer.valueOf(id));
		plan.setStatus("reject");
		JOptionPane.showMessageDialog(null, "Plan reject!");
		DefaultTableModel model = (DefaultTableModel) planListTable.getModel();
		model.removeRow(planIndex);
	}//GEN-LAST:event_rejectjButtonActionPerformed

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_jButton1ActionPerformed


	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable planListTable;
}
