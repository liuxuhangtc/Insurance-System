/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.InsuranceCompany;

import Business.InsuranceSystem;
import Business.UserAccount.InsuranceCompanyUser;
import Business.UserAccount.UserAccount;

import java.awt.Container;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;

import view.PlannerEidtMessageView;
import view.PlannerSelfListView;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.Font;
import java.awt.Color;

/**
 *
 * @author xuhang
 */
public class InsuranceCompanyJPanel extends javax.swing.JPanel {

	private InsuranceSystem system;

	private Container userProcessContainer;

	private JTable userInfoTable;
	private javax.swing.JScrollPane jScrollPane2;
	
	private JButton AllCreate ;
	
	private JButton editMessage;

	private JLabel offerCustomerType;
	private JComboBox<String> offerCustomerTypeFiled;
	
	/**
	 * Creates new form InsuranceCompanyJPanel
	 */
	public InsuranceCompanyJPanel(Container userProcessContainer, InsuranceSystem system) {
		this.userProcessContainer = userProcessContainer;
		this.system = system;
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		
		ImageIcon createIcon = new ImageIcon("./img/create.png");
		ImageIcon myinfoIcon = new ImageIcon("./img/personal.png");

		ArrayList<UserAccount> users=system.getUserAccountDirectory().getUserAccountList();
		List<String> userNames = new ArrayList<>();
		for(UserAccount acc:users) {
			userNames.add(acc.getUsername());
		}
		String[] usersStr = new String[userNames.size()];
		int i=0;
		for(String name:userNames) {
			usersStr[i] = name;
			i++;
		}

		jLabel2 = new javax.swing.JLabel();
		price = new javax.swing.JTextField();
		jLabel3 = new javax.swing.JLabel();
		title = new javax.swing.JTextField();
		jLabel4 = new javax.swing.JLabel();
		offerField = new javax.swing.JComboBox<>();
		jLabel5 = new javax.swing.JLabel();
		age1 = new javax.swing.JTextField();
		jLabel6 = new javax.swing.JLabel();
		to = new javax.swing.JLabel();
		age2 = new javax.swing.JTextField();
		jButton1 = new javax.swing.JButton();
		jButton1.setFont(new Font("Arial", Font.BOLD, 14));
		jLabel8 = new javax.swing.JLabel(createIcon);
		jLabel8.setForeground(Color.BLUE);
		jButton2 = new javax.swing.JButton();
		jButton2.setFont(new Font("Arial", Font.BOLD, 14));
		
		planCreateTime = new JLabel("Date");
		planCreateTimefile = new JTextField();
		planCreateTimefile.setEditable(false);
		Date date = new Date();
		planCreateTimefile.setText(date.toString());

		covertimerange = new JLabel("Cover Time");
		timeStart = new javax.swing.JTextField();;
		timeEnd =  new javax.swing.JTextField();
		jLabel2.setText("Price");

		jLabel3.setText("Title");
		
		offerCustomerType = new JLabel("Customer Type");
		
		offerCustomerTypeFiled = new javax.swing.JComboBox<>();
		
		AllCreate = new JButton("All Created");
		AllCreate.setFont(new Font("Arial", Font.BOLD, 14));
		
		userInfoTable = new javax.swing.JTable();
		jScrollPane2 = new javax.swing.JScrollPane();
		jScrollPane2.setViewportView(userInfoTable);

		editMessage = new JButton(myinfoIcon);
		editMessage.setText("My Info");
		editMessage.setFont(new Font("Arial", Font.BOLD, 14));
		editMessage.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
			  PlannerEidtMessageView eidtMessageView = new PlannerEidtMessageView((InsuranceCompanyUser) system.getCurrentUser(),system);
			}
		});

		title.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				titleActionPerformed(evt);
			}
		});
		
		AllCreate.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				PlannerSelfListView plannerSelfListView = new PlannerSelfListView(system);
			}
		});

		jLabel4.setText("Field");

		offerField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Education", "Healthy", "Financial", "Vehicle" }));
		offerField.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				offerFieldActionPerformed(evt);
			}
		});
		
		offerCustomerTypeFiled.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "enterprise", "individual", "ALL" }));

		jLabel5.setText("Age Range");

		jLabel6.setText("to");
		to.setText("to");


		jButton1.setText("Submit");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jLabel8.setFont(new Font("Arial", Font.BOLD, 18)); // NOI18N
		jLabel8.setText("Create New Plan");

		jButton2.setText("Check Plan Status");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				userProcessContainer.removeAll();
				userProcessContainer.add(new PlanHistoryJPanel(userProcessContainer, system));
				userProcessContainer.revalidate();
			}
		});
		

		userInfoTable.setModel(new javax.swing.table.DefaultTableModel(
				new Object [][] {
					{null, null, null, null}
				},
				new String [] {
						"username", "password", "age", "information"
				}
				) {
			Class[] types = new Class [] {
					java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
			};
			boolean[] canEdit = new boolean [] {
					false, true, true, true
			};

			public Class getColumnClass(int columnIndex) {
				return types [columnIndex];
			}

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit [columnIndex];
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		layout.setHorizontalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addGap(72)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
							.addComponent(editMessage)
							.addGap(30)
							.addComponent(AllCreate)
							.addGap(30)
							.addComponent(jButton1)
							.addGap(30)
							.addComponent(jButton2))
						.addComponent(jLabel8, GroupLayout.PREFERRED_SIZE, 272, GroupLayout.PREFERRED_SIZE)
						.addGroup(layout.createSequentialGroup()
							.addComponent(covertimerange, GroupLayout.PREFERRED_SIZE, 122, GroupLayout.PREFERRED_SIZE)
							.addGap(47)
							.addComponent(timeStart, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE)
							.addGap(18)
							.addComponent(to)
							.addGap(18)
							.addComponent(timeEnd, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE))
						.addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 79, GroupLayout.PREFERRED_SIZE)
						.addGroup(layout.createSequentialGroup()
							.addGroup(layout.createParallelGroup(Alignment.LEADING)
								.addComponent(jLabel4, GroupLayout.PREFERRED_SIZE, 84, GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 66, GroupLayout.PREFERRED_SIZE)
								.addComponent(planCreateTime, GroupLayout.PREFERRED_SIZE, 66, GroupLayout.PREFERRED_SIZE)
								.addComponent(offerCustomerType)
								.addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 122, GroupLayout.PREFERRED_SIZE))
							.addGap(47)
							.addGroup(layout.createParallelGroup(Alignment.TRAILING)
								.addGroup(layout.createSequentialGroup()
									.addComponent(age1, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE)
									.addGap(18)
									.addComponent(jLabel6)
									.addGap(18)
									.addComponent(age2, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE)
									.addGap(47))
								.addGroup(layout.createParallelGroup(Alignment.LEADING)
									.addComponent(offerCustomerTypeFiled, GroupLayout.PREFERRED_SIZE, 132, GroupLayout.PREFERRED_SIZE)
									.addComponent(offerField, GroupLayout.PREFERRED_SIZE, 132, GroupLayout.PREFERRED_SIZE)
									.addGroup(layout.createParallelGroup(Alignment.TRAILING, false)
										.addComponent(price, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
										.addComponent(title, Alignment.LEADING))
									.addComponent(planCreateTimefile, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 239, GroupLayout.PREFERRED_SIZE)))))
					.addGap(108))
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addContainerGap()
					.addComponent(jLabel8, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
					.addGap(12)
					.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
						.addComponent(jLabel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(title, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addComponent(jLabel2)
						.addComponent(price, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(offerField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(jLabel4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(offerCustomerTypeFiled, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(offerCustomerType, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(age1, GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
						.addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
						.addComponent(jLabel6)
						.addComponent(age2, GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
					.addGap(18)
					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(timeStart, GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
						.addComponent(covertimerange, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
						.addComponent(to)
						.addComponent(timeEnd, GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(planCreateTime)
						.addComponent(planCreateTimefile, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE))
					.addGap(121)
					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(editMessage)
						.addComponent(AllCreate)
						.addComponent(jButton1)
						.addComponent(jButton2))
					.addGap(104))
		);
		this.setLayout(layout);
	}// </editor-fold>//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		// TODO add your handling code here:
		if(checkNull("title",title.getText())) {
			return;
		}
		if(checkNull("price",price.getText())) {
			return;
		}
		if(checkNull("age1",age1.getText())) {
			return;
		}
		if(checkNull("timeStart",timeStart.getText())) {
			return;
		}
		if(checkNull("timeEnd",timeEnd.getText())) {
			return;
		}
		if(checkNull("CreateTime",planCreateTimefile.getText())) {
			return;
		}
		
		system.getPlanDirectory().createPlan(
				system.getCurrentUser()
				, title.getText()
				, Integer.valueOf(price.getText())
				, age1.getText() + "-" + age2.getText()
				, (String)offerField.getSelectedItem()
				, timeStart.getText()+"-"+timeEnd.getText(),planCreateTimefile.getText()
				,(String)offerCustomerTypeFiled.getSelectedItem()
                                , ((InsuranceCompanyUser)system.getCurrentUser()).getPlannerCompany());

		JOptionPane.showMessageDialog(null, "Plan Created");
	}//GEN-LAST:event_jButton1ActionPerformed
	
	private boolean checkNull(String tag,String value) {
		if(value.isEmpty()||value==null) {
			JOptionPane.showMessageDialog(null, tag + "IS NULL");
		    return true;
		}
		return false;
	}

	private void offerFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_offerFieldActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_offerFieldActionPerformed

	private void titleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_titleActionPerformed

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
		// TODO add your handling code here:
		userProcessContainer.removeAll();
		userProcessContainer.add(new PlanHistoryJPanel(userProcessContainer, system));
		userProcessContainer.revalidate();
	}//GEN-LAST:event_jButton2ActionPerformed


	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JTextField age1;
	private javax.swing.JTextField age2;
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6,to;
	private javax.swing.JLabel jLabel8;
	private JLabel covertimerange;
	private JTextField timeStart,timeEnd;
	private JLabel planCreateTime;
	private JTextField planCreateTimefile;
	private javax.swing.JComboBox<String> offerField;
	private javax.swing.JTextField price;
	private javax.swing.JTextField title;
	// End of variables declaration//GEN-END:variables
}
