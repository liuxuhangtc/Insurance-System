/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Government;

import Business.InsuranceSystem;
import Business.Plan.Plan;
import Business.UserAccount.GovernmentUser;
import Business.UserAccount.InsuranceCompanyUser;
import view.GovEidtMessageView;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.Font;
import java.awt.Color;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;

/**
 *
 * @author xuhang
 */
public class GovernmentJPanel extends javax.swing.JPanel {

	private InsuranceSystem system;
	/**
	 * Creates new form GovernmentJPanel
	 */
	public GovernmentJPanel(InsuranceSystem system) {
		this.system = system;
		initComponents();
		initTable(system.getPlanDirectory().getPlanList());

	}


	private void initTable(ArrayList<Plan> plans) {
		DefaultTableModel model = (DefaultTableModel) planListTable.getModel();
		model.setRowCount(0);

		for (Plan plan : plans) {
			if (!plan.getStatus().equals("approve")) {
				continue;
			}
			Object[] row = new Object[7];
			row[0] = plan.getTitle();
			row[1] = plan.getPlanId();
			row[2] = plan.getPrice();
			row[3] = plan.getOfferField();
			row[4] = plan.getOfferAgeRange();
			row[5] = plan.getCovertimerange();
			row[6] = ((InsuranceCompanyUser)plan.getCreateUser()).getPlannerCompany();

			model.addRow(row);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private JButton editMessageBtn;
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		
		ImageIcon myinfoIcon = new ImageIcon("./img/personal.png");
		ImageIcon govIcon = new ImageIcon("./img/capitol-building.png");

		approveButton = new javax.swing.JButton();
		approveButton.setFont(new Font("Arial", Font.BOLD, 14));
		rejectButton = new javax.swing.JButton();
		rejectButton.setFont(new Font("Arial", Font.BOLD, 14));
		jScrollPane1 = new javax.swing.JScrollPane();
		planListTable = new javax.swing.JTable();
		planListTable.setFont(new Font("Arial", Font.BOLD, 14));
		jLabel1 = new javax.swing.JLabel(govIcon);
		jLabel1.setForeground(Color.BLUE);
		jLabel1.setFont(new Font("Arial", Font.BOLD, 18));

		editMessageBtn = new JButton(myinfoIcon);
		editMessageBtn.setText("My Info");
		editMessageBtn.setFont(new Font("Arial", Font.BOLD, 14));

		approveButton.setText("Approve");
		approveButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				approveButtonActionPerformed(evt);
			}
		});

		editMessageBtn.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				GovEidtMessageView eidtMessageView = new GovEidtMessageView((GovernmentUser) system.getCurrentUser(), system);
			}
		});

		rejectButton.setText("Reject");
		rejectButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				rejectButtonActionPerformed(evt);
			}
		});

		planListTable.setModel(new javax.swing.table.DefaultTableModel(
				new Object [][] {
					{null, null, null, null, null, null,null},
					{null, null, null, null, null, null,null},
					{null, null, null, null, null, null,null},
					{null, null, null, null, null, null,null}
				},
				new String [] {
						"Title", "Plan id", "Price", "Offer Field", "Offer Age Range", "Cover Time Range","Company"
				}
				) {
			boolean[] canEdit = new boolean [] {
					true, false, false, false, false, true,false
			};

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit [columnIndex];
			}
		});
		jScrollPane1.setViewportView(planListTable);

		jLabel1.setText("Government Work Area");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		layout.setHorizontalGroup(
			layout.createParallelGroup(Alignment.TRAILING)
				.addGroup(layout.createSequentialGroup()
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
							.addGap(264)
							.addComponent(jLabel1))
						.addGroup(layout.createSequentialGroup()
							.addContainerGap()
							.addGroup(layout.createParallelGroup(Alignment.TRAILING)
								.addGroup(layout.createSequentialGroup()
									.addComponent(editMessageBtn)
									.addGap(43)
									.addComponent(approveButton)
									.addGap(43)
									.addComponent(rejectButton))
								.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 808, GroupLayout.PREFERRED_SIZE))))
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(Alignment.TRAILING)
				.addGroup(Alignment.LEADING, layout.createSequentialGroup()
					.addGap(20)
					.addComponent(jLabel1)
					.addGap(26)
					.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 215, GroupLayout.PREFERRED_SIZE)
					.addGap(43)
					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(editMessageBtn)
						.addComponent(approveButton)
						.addComponent(rejectButton))
					.addContainerGap(230, Short.MAX_VALUE))
		);
		this.setLayout(layout);
	}// </editor-fold>//GEN-END:initComponents

	private void approveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveButtonActionPerformed
		// TODO add your handling code here:
		int planIndex = planListTable.getSelectedRow();
                if(planIndex < 0){
                    JOptionPane.showMessageDialog(null, "Please select a row!");
                    return;
                }
		String id = planListTable.getValueAt(planListTable.getSelectedRow(), 1).toString();
		Plan plan = system.getPlanDirectory().findPlanById(Integer.valueOf(id));
		plan.setStatus("market approve");
		system.getPlanDirectory().addToMarket(plan);
		JOptionPane.showMessageDialog(null, "Plan approved! The plan is in the market!");
		DefaultTableModel model = (DefaultTableModel) planListTable.getModel();
		model.removeRow(planIndex);
	}//GEN-LAST:event_approveButtonActionPerformed

	private void rejectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectButtonActionPerformed
		// TODO add your handling code here:
		int planIndex = planListTable.getSelectedRow();
                if(planIndex < 0){
                    JOptionPane.showMessageDialog(null, "Please select a row!");
                    return;
                }
		String id = planListTable.getValueAt(planListTable.getSelectedRow(), 1).toString();
		Plan plan = system.getPlanDirectory().findPlanById(Integer.valueOf(id));
		plan.setStatus("market reject");
		system.getPlanDirectory().addToMarket(plan);
		JOptionPane.showMessageDialog(null, "Plan rejected!");
		DefaultTableModel model = (DefaultTableModel) planListTable.getModel();
		model.removeRow(planIndex);
	}//GEN-LAST:event_rejectButtonActionPerformed


	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton approveButton;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable planListTable;
	private javax.swing.JButton rejectButton;
	// End of variables declaration//GEN-END:variables
}
